<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.exasol</groupId>
	<artifactId>exa-hadoop-etl-udfs</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<hadoop.version>2.5.0-cdh5.2.0</hadoop.version>
		<hive.version>0.13.1-cdh5.2.0</hive.version>
		<!--  hadoop01.omg.dev.exasol uses hadoop 2.5.0-cdh5.2.0 and hive 0.13.1-cdh5.2.0 -->
	</properties>

    <repositories>
        <repository>
            <id>maven.exasol.com</id>
            <url>https://maven.exasol.com/artifactory/exasol-releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven.exasol.com-snapshots</id>
            <url>https://maven.exasol.com/artifactory/exasol-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>cloudera</id>
            <!-- If true, this profile is automatically active for all builds, unless another profile gets activated-->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <repositories>
                <repository>
                    <id>cloudera</id>
                    <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
                </repository>
            </repositories>
        </profile>
        <profile>
            <id>hortonworks</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <repositories>
                <repository>
                    <id>hortonworks releases</id>
                    <url>http://repo.hortonworks.com/content/repositories/releases/</url>
                </repository>
                <!-- Hortonworks introduces a strange dependency to org.mortbay.jetty:jetty:jar:6.1.26.hwx, available in a special repo -->
                <repository>
                    <id>hortonworks jetty</id>
                    <url>http://repo.hortonworks.com/content/repositories/jetty-hadoop/</url>
                </repository>
            </repositories>
        </profile>
    </profiles>

	<dependencies>
		<dependency>
			<groupId>com.exasol</groupId>
			<artifactId>exasol-script-api</artifactId>
			<version>6.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.exasol</groupId>
			<artifactId>virtualschema-common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- This contains the api and implementation -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.4</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.0.31-beta</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-annotations</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-core</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<!-- hadoop-mapreduce-client-common seems to be only needed for newer CDH versions. Without it there was an runtime error: java.lang.NoClassDefFoundError: org/apache/hadoop/mapred/MRVersion -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-common</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-common</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-serde</artifactId>
			<version>${hive.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-exec</artifactId>
			<version>${hive.version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.anarres.lzo</groupId>
			<artifactId>lzo-hadoop</artifactId>
			<version>1.0.4</version>
		</dependency>
		-->

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- This can be started with the goal assembly:single -->
			<!-- Example (creates regular jar and all-dependencies jar): mvn clean
				compile package assembly:single -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/all-dependencies.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>job</id>
						<!-- <phase>package</phase> -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
